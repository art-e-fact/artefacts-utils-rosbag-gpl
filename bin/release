#!/usr/bin/env bash

set -e

production=${1:-no}

if [[ -d venv ]]
then
  source venv/bin/activate
fi

# Get the new version
new_version=$(python -m setuptools_scm)

if [[ ! "$new_version" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]+$ ]]
then
  >&2 echo "The release version must be a semver string specified by a Git tag on the current commit. Currently found ${new_version}. Most likely resolution is to commit/remove all pending changes in the repository, then issue the \`git tag\` command before running this script."
  exit 1
fi

python -m build

if [[ "$production" = "production" ]]
then
  twine upload dist/artefacts_toolkit_rosbag_gpl-${new_version}-py3-none-any.whl
else
  twine upload -r testpypi dist/artefacts_toolkit_rosbag_gpl-${new_version}-py3-none-any.whl
fi
